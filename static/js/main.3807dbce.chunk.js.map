{"version":3,"sources":["logo.svg","serviceWorker.js","socket-con/config.js","components/navbar.jsx","components/listItems.js","components/Title.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/Exchange.js","components/Info.js","components/Dashboard.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","socket","io","path","NavbarPage","state","isOpen","toggleCollapse","setState","label","button","color_btn","handleChange","bind","connected","alert","this","close","open","color","dark","expand","className","onClick","id","navbar","right","to","gradient","Component","ListItem","ListItemIcon","ListItemText","ListSubheader","Title","props","Typography","component","variant","gutterBottom","children","Chart","theme","useTheme","data","stock","stocksDict","forEach","time","Date","toLocaleString","push","amount","createData","value","useState","setValue","useEffect","interval","setInterval","clearInterval","Fragment","margin","top","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","type","main","dot","useStyles","makeStyles","depositContext","flex","Deposits","stocks","stocksNames","length","element","ticker","map","i","Button","key","onChangeStock","changeStockName","date","name","shipTo","paymentMethod","seeMore","marginTop","spacing","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","sellDict","buyDict","maxDict","minDict","lastDict","last2Dict","toFixed","Exchange","exchange","dicBuy","dicSell","dicStocks","dictVol","dicMarket","totVol","exchangeNames","company_name","listed_companies","company","ex","Info","dolar","country","quote_base","Copyright","Link","href","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","setStockNames","stockAct","setStockAct","setExchangeNames","stocksBuys","setStockBuys","stocksSells","setStockSells","dicStockbuys","dicStocksells","stocksMax","setStockMax","stocksMin","setStockMin","stocksLast","setStockLast","stocksLast2","setStockLast2","setStocks","dictStockMax","dictStockMin","dictStockLast","dictStockLast2","dictStocks","once","listExchange","Object","keys","console","log","on","volume","classes","React","fixedHeightPaper","clsx","CssBaseline","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","emit","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3807dbce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import io from 'socket.io-client';\nconst socket = io('https://le-18262636.bitzonte.com/', {\n    path: '/stocks'\n  })\nexport default socket;","import React, { Component } from \"react\";\nimport { MDBNavbar,MDBBtn, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport socket from '../socket-con/config';\n\nclass NavbarPage extends Component {\n  constructor() {\n    super();\n    this.state={\n      label: 'Socket on',\n      button: 'Close Socket',\n      color_btn: 'aqua'\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  state = {\n    isOpen: false\n  };\n  handleChange() {\n    if (socket.connected){\n      alert(\"Cerrando socket\");\n      this.setState({label: 'Socket OFF',button:'Start Socket',color_btn: \"peach\"})\n      socket.close()}\n    else{\n      alert(\"Abriendo socket\");\n      this.setState({label: 'Socket ON',button:'Close Socket',color_btn: 'aqua'})\n      socket.open()}\n  }\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n\n\n  render() {\n    return (\n      <Router>\n        <MDBNavbar color=\"default-color\" dark expand=\"md\">\n          <MDBNavbarBrand>\n            <strong className=\"white-text\">MarketExchange</strong>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <MDBNavbarNav right>\n              <MDBNavItem>\n                <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\n                  <MDBBtn onClick={this.handleChange} gradient={this.state.color_btn}>{this.state.label}</MDBBtn>\n                </MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBNavbar>\n      </Router>\n      );\n    }\n  }\n\nexport default NavbarPage;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ShoppingCartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Orders\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Customers\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Integrations\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, {useEffect, useState} from \"react\";\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart,Tooltip, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\n// const data = [\n//   createData('00:00', 0),\n//   createData('03:00', 300),\n//   createData('06:00', 600),\n//   createData('09:00', 800),\n//   createData('12:00', 1500),\n//   createData('15:00', 2000),\n//   createData('18:00', 2400),\n//   createData('21:00', 2000),\n//   createData('24:00', 3000),\n// ];\n\nexport default function Chart(props) {\n  const theme = useTheme();\n  var data =[]\n  if(props.stock && props.stocksDict[props.stock]){\n    props.stocksDict[props.stock].forEach((stock)=>{\n      const time = new Date(stock.time).toLocaleString(\"es-CL\")\n      data.push(createData(time,stock.value))\n    })\n  }\n  const [value, setValue] = useState(0); //\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue(value => ++value);\n    }, 100);\n    return () => clearInterval(interval);\n  }, [])\n  return (\n    <React.Fragment>\n      <Title>{props.stock}</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Value\n            </Label>\n          </YAxis>\n          <Tooltip />\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={true} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits(props) {\n  var stocks=[]\n  if(props.stocksNames.length){\n    props.stocksNames.forEach(element => {\n      stocks.push(element.ticker)\n    });\n  }\n  const changeStockName = value =>{\n    props.onChangeStock(value)\n  }\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title >SELECT STOCK</Title>\n      {stocks.map((value,i) => {\n        return <Button key={i} onClick={() => changeStockName(value)} color=\"primary\">{value}</Button>\n      })}\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders(props) {\n  var stocks=[]\n  if(props.stocksNames.length){\n    props.stocksNames.forEach(element => {\n      stocks.push(element.ticker)\n    });\n  }\n  // utilizamos este truquito de internet para que se actualice\n  //https://stackoverflow.com/questions/59144539/react-usestate-doesnt-update-state-on-setinterval\n  const [value, setValue] = useState(0); //\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue(value => ++value);\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Stocks</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Stock Ticker</TableCell>\n            <TableCell>Volume</TableCell>\n            <TableCell>Max Value</TableCell>\n            <TableCell>Min Value</TableCell>\n            <TableCell>Last Value</TableCell>\n            <TableCell align=\"right\">Variation</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stocks.map((value,i) => (\n            <TableRow key={i}>\n              <TableCell>{value}</TableCell>\n              <TableCell>{props.sellDict[value] + props.buyDict[value] }</TableCell>\n              <TableCell>{props.maxDict[value]}</TableCell>\n              <TableCell>{props.minDict[value]}</TableCell>\n              <TableCell>{props.lastDict[value]}</TableCell>\n              <TableCell align=\"right\">{((props.last2Dict[value]/props.lastDict[value])*100-100).toFixed(2)}%</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Exchange(props) {\n  var stocks={}\n  var exchange=[]\n  var dicBuy={}\n  var dicSell= {}\n  var dicStocks={}\n  var dictVol={}\n  var dicMarket={}\n  var totVol=0\n  if(props.exchangeNames.length &&  props.stocksNames.length){\n    props.stocksNames.forEach((stock)=>{\n        stocks[stock.company_name]= stock.ticker\n      })\n    props.exchangeNames.forEach(element => {\n      exchange.push(element.name)\n      dicBuy[element.name]=0\n      dicSell[element.name]=0\n      dictVol[element.name]=0\n      dicMarket[element.name]=0\n      dicStocks[element.name]=element.listed_companies.length   \n      element.listed_companies.forEach((company)=>{\n        dicBuy[element.name]+= props.buyDict[stocks[company]]\n        dicSell[element.name]+= props.sellDict[stocks[company]]\n        dictVol[element.name]+= (props.buyDict[stocks[company]] +props.sellDict[stocks[company]])\n        \n      })\n      totVol+=dictVol[element.name]                                                                                                                                                                                                                                       \n    });\n    exchange.forEach((ex)=>{\n        dicMarket[ex]= (dictVol[ex]/totVol *100).toFixed(2)\n    })\n  }\n  // utilizamos este truquito de internet para que se actualice\n  //https://stackoverflow.com/questions/59144539/react-usestate-doesnt-update-state-on-setinterval\n  const [value, setValue] = useState(0); //\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue(value => ++value);\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  return (\n    <React.Fragment>\n      <Title>Exchange</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Market Name</TableCell>\n            <TableCell>Buy Volume</TableCell>\n            <TableCell>Sell Volume</TableCell>\n            <TableCell>Total Volume</TableCell>\n            <TableCell>Total stocks</TableCell>\n            <TableCell align=\"right\">Market Percentage</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {exchange.map((value,i) => (\n            <TableRow key={i}>\n              <TableCell>{value}</TableCell>\n              <TableCell>{dicBuy[value]}</TableCell>\n              <TableCell>{dicSell[value]}</TableCell>\n              <TableCell>{dictVol[value]}</TableCell>\n              <TableCell>{dicStocks[value]}</TableCell>\n              <TableCell align=\"right\">{dicMarket[value]}%</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\n\nexport default function Info(props) {\n    var name = \"No Company name\"\n    var dolar= \"No quote Base\"\n    var country = \"No Country\"\n    props.stocksNames.forEach(stock=>{\n        if (stock.ticker==props.stock) {\n            name= stock.company_name\n            dolar= stock.quote_base\n            country= stock.country\n        }\n    })\n    return (\n        <React.Fragment>\n        <Title align=\"center\" >{name}</Title>\n        <Typography align=\"center\" variant=\"subtitle1\">{props.stock}</Typography>\n        <Typography align=\"center\" variant=\"p\">{country}</Typography>\n        <Typography align=\"center\" variant=\"p\">{dolar}</Typography>\n        </React.Fragment>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport Exchange from './Exchange';\nimport Info from './Info';\nimport NavBar from './navbar';\nimport socket from '../socket-con/config';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\n\n\nsocket.emit('STOCKS');\nsocket.emit('EXCHANGES');\n\nexport default function Dashboard() {\n  const [stocksNames, setStockNames] = useState([]);\n  const [stockAct, setStockAct] = useState('AAPL');\n  const [exchangeNames, setExchangeNames] = useState([]);\n\n   // Para resolver por acción\n  const [stocksBuys, setStockBuys] = useState({});\n  const [stocksSells, setStockSells] = useState({});\n  var dicStockbuys={}\n  var dicStocksells={}\n \n  const [stocksMax, setStockMax] = useState({});\n  const [stocksMin, setStockMin] = useState({});\n  const [stocksLast, setStockLast] = useState({});\n  const [stocksLast2, setStockLast2] = useState({});\n  const [stocks,setStocks] = useState({});\n  var dictStockMax={}\n  var dictStockMin={}\n  var dictStockLast={}\n  var dictStockLast2={}\n  var dictStocks={}\n\n\n  useEffect(() => {\n    socket.once('STOCKS', (data)=>{\n      setStockNames([...data])\n    })\n    socket.once('EXCHANGES', (data)=>{\n      var listExchange = []\n      Object.keys(data).forEach((key)=>{\n        console.log(data[key])\n        listExchange.push(data[key])\n      })\n      setExchangeNames(listExchange)\n      console.log(listExchange)\n    })\n  },[])\n  useEffect(() => {\n    socket.on(\"UPDATE\", (data)=>{\n      if(!dictStockMax[data.ticker]){\n        dictStockMax[data.ticker]=data.value\n        dictStockMin[data.ticker]=data.value\n        dictStocks[data.ticker]=[data]\n        dictStockLast2[data.ticker]=1\n      }else{\n        if (dictStockMax[data.ticker]<data.value) {\n            dictStockMax[data.ticker]=data.value    \n        }\n        if (dictStockMin[data.ticker]>data.value){\n          dictStockMin[data.ticker]=data.value\n        }\n        dictStockLast2[data.ticker]=dictStockLast[data.ticker]\n        dictStocks[data.ticker].push(data)\n      }\n      // console.log(dictStocks)\n      dictStockLast[data.ticker]=data.value\n      setStockLast2(dictStockLast2)\n      setStockMax(dictStockMax)\n      setStockLast(dictStockLast)\n      setStockMin(dictStockMin)\n      setStocks(dictStocks)\n      // console.log(stocksLast)\n      // console.log(dictStockLast)\n\n    })\n    socket.on(\"BUY\", (data)=>{\n      if(!dicStockbuys[data.ticker]){\n        dicStockbuys[data.ticker] = data.volume\n      }else{\n        dicStockbuys[data.ticker] += data.volume\n      }\n      setStockBuys(dicStockbuys)\n    })\n    socket.on(\"SELL\", (data)=>{\n      if(!dicStocksells[data.ticker]){\n        dicStocksells[data.ticker] = data.volume\n      }else{\n        dicStocksells[data.ticker] += data.volume\n      }\n      setStockSells(dicStocksells)\n    })\n  },[])\n  const test = \"hola\"\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const onChangeStock = (value) => {\n    setStockAct(value)\n  }\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={8}>\n              <Paper className={fixedHeightPaper}>\n                <Chart stock={stockAct} stocksDict={stocks} />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={2}>\n              <Paper className={fixedHeightPaper}>\n                <Info stock={stockAct}\n                stocksNames= {stocksNames}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={2}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits onChangeStock= {onChangeStock} stocksNames= {stocksNames}/>\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Exchange\n                stocksNames= {stocksNames}\n                exchangeNames= {exchangeNames}\n                buyDict={stocksBuys}\n                sellDict={stocksSells} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders\n                stocksNames= {stocksNames}\n                maxDict={stocksMax}\n                minDict={stocksMin}\n                lastDict={stocksLast}\n                last2Dict={stocksLast2}\n                buyDict={stocksBuys}\n                sellDict={stocksSells} />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport NavbarPage from './components/navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport Dashboard from './components/Dashboard';\nimport {socket} from \"./socket-con/config.js\";\nReactDOM.render(\n  <React.StrictMode>\n    <NavbarPage/>\n    <Dashboard/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}